; Listing generated by Microsoft (R) Optimizing Compiler Version 19.41.34120.0 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__A5CE043C_test@pch DB 01H
__A7E06E07_countDays@cpp DB 01H
__18A5FD50_stdafx@h DB 01H
__0AD82C7B_stdafx@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?countDays@@YAHHHHHHH@Z				; countDays
PUBLIC	__JustMyCode_Default
EXTRN	?defineLeapYear@@YA_NH@Z:PROC			; defineLeapYear
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+42
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+47
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?countDays@@YAHHHHHHH@Z DD imagerel $LN70
	DD	imagerel $LN70+1595
	DD	imagerel $unwind$?countDays@@YAHHHHHHH@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?countDays@@YAHHHHHHH@Z DD 025053801H
	DD	011b2320H
	DD	070140077H
	DD	05013H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?countDays@@YAHHHHHHH@Z$rtcName$0 DB 044H		; countDays
	DB	061H
	DB	079H
	DB	073H
	DB	049H
	DB	06eH
	DB	04dH
	DB	06fH
	DB	075H
	DB	06eH
	DB	074H
	DB	063H
	DB	068H
	DB	00H
	ORG $+2
?countDays@@YAHHHHHHH@Z$rtcVarDesc DD 028H		; countDays
	DD	030H
	DQ	FLAT:?countDays@@YAHHHHHHH@Z$rtcName$0
	ORG $+48
?countDays@@YAHHHHHHH@Z$rtcFrameData DD 01H		; countDays
	DD	00H
	DQ	FLAT:?countDays@@YAHHHHHHH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025051801H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025051301H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
  00000	c2 00 00	 ret	 0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pipec\sem2\kpo\lab3\test\test\countDays.cpp
;	COMDAT ?countDays@@YAHHHHHHH@Z
_TEXT	SEGMENT
DaysInMountch$ = 8
summ$ = 84
i$4 = 116
j$5 = 148
k$6 = 180
p$7 = 212
b$8 = 244
a$9 = 276
a$10 = 308
o$11 = 340
j$12 = 372
i$13 = 404
q$14 = 436
j$15 = 468
i$16 = 500
birthday$ = 944
monthOfBirth$ = 952
day$ = 960
month$ = 968
year$ = 976
yearOfBirth$ = 984
?countDays@@YAHHHHHHH@Z PROC				; countDays, COMDAT

; 4    : {

$LN70:
  00000	44 89 4c 24 20	 mov	 DWORD PTR [rsp+32], r9d
  00005	44 89 44 24 18	 mov	 DWORD PTR [rsp+24], r8d
  0000a	89 54 24 10	 mov	 DWORD PTR [rsp+16], edx
  0000e	89 4c 24 08	 mov	 DWORD PTR [rsp+8], ecx
  00012	55		 push	 rbp
  00013	57		 push	 rdi
  00014	48 81 ec b8 03
	00 00		 sub	 rsp, 952		; 000003b8H
  0001b	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00020	48 8d 7c 24 20	 lea	 rdi, QWORD PTR [rsp+32]
  00025	b9 86 00 00 00	 mov	 ecx, 134		; 00000086H
  0002a	b8 cc cc cc cc	 mov	 eax, -858993460		; ccccccccH
  0002f	f3 ab		 rep stosd
  00031	8b 8c 24 d8 03
	00 00		 mov	 ecx, DWORD PTR [rsp+984]
  00038	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A7E06E07_countDays@cpp
  0003f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00044	90		 npad	 1

; 5    : 	int DaysInMountch[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

  00045	c7 45 08 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp], 31
  0004c	c7 45 0c 1c 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+4], 28
  00053	c7 45 10 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+8], 31
  0005a	c7 45 14 1e 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+12], 30
  00061	c7 45 18 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+16], 31
  00068	c7 45 1c 1e 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+20], 30
  0006f	c7 45 20 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+24], 31
  00076	c7 45 24 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+28], 31
  0007d	c7 45 28 1e 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+32], 30
  00084	c7 45 2c 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+36], 31
  0008b	c7 45 30 1e 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+40], 30
  00092	c7 45 34 1f 00
	00 00		 mov	 DWORD PTR DaysInMountch$[rbp+44], 31

; 6    : 	if (defineLeapYear(year)) {

  00099	8b 8d d0 03 00
	00		 mov	 ecx, DWORD PTR year$[rbp]
  0009f	e8 00 00 00 00	 call	 ?defineLeapYear@@YA_NH@Z ; defineLeapYear
  000a4	0f b6 c0	 movzx	 eax, al
  000a7	85 c0		 test	 eax, eax
  000a9	74 11		 je	 SHORT $LN41@countDays

; 7    : 		DaysInMountch[1] = 29;

  000ab	b8 04 00 00 00	 mov	 eax, 4
  000b0	48 6b c0 01	 imul	 rax, rax, 1
  000b4	c7 44 05 08 1d
	00 00 00	 mov	 DWORD PTR DaysInMountch$[rbp+rax], 29
$LN41@countDays:

; 8    : 	}
; 9    : 
; 10   : 	int summ=0;

  000bc	c7 45 54 00 00
	00 00		 mov	 DWORD PTR summ$[rbp], 0

; 11   : 	if (defineLeapYear(yearOfBirth) && monthOfBirth == 2 && birthday == 29) {

  000c3	8b 8d d8 03 00
	00		 mov	 ecx, DWORD PTR yearOfBirth$[rbp]
  000c9	e8 00 00 00 00	 call	 ?defineLeapYear@@YA_NH@Z ; defineLeapYear
  000ce	0f b6 c0	 movzx	 eax, al
  000d1	85 c0		 test	 eax, eax
  000d3	0f 84 a6 02 00
	00		 je	 $LN42@countDays
  000d9	83 bd b8 03 00
	00 02		 cmp	 DWORD PTR monthOfBirth$[rbp], 2
  000e0	0f 85 99 02 00
	00		 jne	 $LN42@countDays
  000e6	83 bd b0 03 00
	00 1d		 cmp	 DWORD PTR birthday$[rbp], 29
  000ed	0f 85 8c 02 00
	00		 jne	 $LN42@countDays

; 12   : 		if (defineLeapYear(year)) {

  000f3	8b 8d d0 03 00
	00		 mov	 ecx, DWORD PTR year$[rbp]
  000f9	e8 00 00 00 00	 call	 ?defineLeapYear@@YA_NH@Z ; defineLeapYear
  000fe	0f b6 c0	 movzx	 eax, al
  00101	85 c0		 test	 eax, eax
  00103	0f 84 60 01 00
	00		 je	 $LN44@countDays

; 13   : 			if (month==1) {

  00109	83 bd c8 03 00
	00 01		 cmp	 DWORD PTR month$[rbp], 1
  00110	75 20		 jne	 SHORT $LN46@countDays

; 14   : 				summ = DaysInMountch[0] - day+29;

  00112	b8 04 00 00 00	 mov	 eax, 4
  00117	48 6b c0 00	 imul	 rax, rax, 0
  0011b	8b 8d c0 03 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  00121	8b 44 05 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax]
  00125	2b c1		 sub	 eax, ecx
  00127	83 c0 1d	 add	 eax, 29
  0012a	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 15   : 			}

  0012d	e9 32 01 00 00	 jmp	 $LN47@countDays
$LN46@countDays:

; 16   : 			else if (month == 2) {

  00132	83 bd c8 03 00
	00 02		 cmp	 DWORD PTR month$[rbp], 2
  00139	0f 85 94 00 00
	00		 jne	 $LN48@countDays

; 17   : 				if (day < 29) {

  0013f	83 bd c0 03 00
	00 1d		 cmp	 DWORD PTR day$[rbp], 29
  00146	7d 10		 jge	 SHORT $LN50@countDays

; 18   : 					summ = 29 - day;

  00148	b8 1d 00 00 00	 mov	 eax, 29
  0014d	2b 85 c0 03 00
	00		 sub	 eax, DWORD PTR day$[rbp]
  00153	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 19   : 				}

  00156	eb 76		 jmp	 SHORT $LN51@countDays
$LN50@countDays:

; 20   : 				else if (day == 29) {

  00158	83 bd c0 03 00
	00 1d		 cmp	 DWORD PTR day$[rbp], 29
  0015f	75 6d		 jne	 SHORT $LN52@countDays

; 21   : 					summ = 57;

  00161	c7 45 54 39 00
	00 00		 mov	 DWORD PTR summ$[rbp], 57 ; 00000039H

; 22   : 					for (int i = 2; i != 12; i++) {

  00168	c7 45 74 02 00
	00 00		 mov	 DWORD PTR i$4[rbp], 2
  0016f	eb 08		 jmp	 SHORT $LN4@countDays
$LN2@countDays:
  00171	8b 45 74	 mov	 eax, DWORD PTR i$4[rbp]
  00174	ff c0		 inc	 eax
  00176	89 45 74	 mov	 DWORD PTR i$4[rbp], eax
$LN4@countDays:
  00179	83 7d 74 0c	 cmp	 DWORD PTR i$4[rbp], 12
  0017d	74 14		 je	 SHORT $LN3@countDays

; 23   : 						summ += DaysInMountch[i];

  0017f	48 63 45 74	 movsxd	 rax, DWORD PTR i$4[rbp]
  00183	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00187	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  0018a	03 c8		 add	 ecx, eax
  0018c	8b c1		 mov	 eax, ecx
  0018e	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 24   : 					}

  00191	eb de		 jmp	 SHORT $LN2@countDays
$LN3@countDays:

; 25   : 					for (int j = 0; j != 12; j++) {

  00193	c7 85 94 00 00
	00 00 00 00 00	 mov	 DWORD PTR j$5[rbp], 0
  0019d	eb 0e		 jmp	 SHORT $LN7@countDays
$LN5@countDays:
  0019f	8b 85 94 00 00
	00		 mov	 eax, DWORD PTR j$5[rbp]
  001a5	ff c0		 inc	 eax
  001a7	89 85 94 00 00
	00		 mov	 DWORD PTR j$5[rbp], eax
$LN7@countDays:
  001ad	83 bd 94 00 00
	00 0c		 cmp	 DWORD PTR j$5[rbp], 12
  001b4	74 18		 je	 SHORT $LN6@countDays

; 26   : 						summ += 3*DaysInMountch[j];

  001b6	48 63 85 94 00
	00 00		 movsxd	 rax, DWORD PTR j$5[rbp]
  001bd	6b 44 85 08 03	 imul	 eax, DWORD PTR DaysInMountch$[rbp+rax*4], 3
  001c2	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  001c5	03 c8		 add	 ecx, eax
  001c7	8b c1		 mov	 eax, ecx
  001c9	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 27   : 					}

  001cc	eb d1		 jmp	 SHORT $LN5@countDays
$LN6@countDays:
$LN52@countDays:
$LN51@countDays:

; 28   : 				
; 29   : 				}
; 30   : 			}

  001ce	e9 91 00 00 00	 jmp	 $LN49@countDays
$LN48@countDays:

; 31   : 			else {
; 32   : 				summ = 57+DaysInMountch[month-1]-day;

  001d3	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  001d9	ff c8		 dec	 eax
  001db	48 98		 cdqe
  001dd	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  001e1	83 c0 39	 add	 eax, 57			; 00000039H
  001e4	2b 85 c0 03 00
	00		 sub	 eax, DWORD PTR day$[rbp]
  001ea	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 33   : 				for (int k = 0; k != 12; k++) {

  001ed	c7 85 b4 00 00
	00 00 00 00 00	 mov	 DWORD PTR k$6[rbp], 0
  001f7	eb 0e		 jmp	 SHORT $LN10@countDays
$LN8@countDays:
  001f9	8b 85 b4 00 00
	00		 mov	 eax, DWORD PTR k$6[rbp]
  001ff	ff c0		 inc	 eax
  00201	89 85 b4 00 00
	00		 mov	 DWORD PTR k$6[rbp], eax
$LN10@countDays:
  00207	83 bd b4 00 00
	00 0c		 cmp	 DWORD PTR k$6[rbp], 12
  0020e	74 54		 je	 SHORT $LN9@countDays

; 34   : 					for (int p = month; p != 12; p++) {

  00210	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  00216	89 85 d4 00 00
	00		 mov	 DWORD PTR p$7[rbp], eax
  0021c	eb 0e		 jmp	 SHORT $LN13@countDays
$LN11@countDays:
  0021e	8b 85 d4 00 00
	00		 mov	 eax, DWORD PTR p$7[rbp]
  00224	ff c0		 inc	 eax
  00226	89 85 d4 00 00
	00		 mov	 DWORD PTR p$7[rbp], eax
$LN13@countDays:
  0022c	83 bd d4 00 00
	00 0c		 cmp	 DWORD PTR p$7[rbp], 12
  00233	74 17		 je	 SHORT $LN12@countDays

; 35   : 						summ += DaysInMountch[p];

  00235	48 63 85 d4 00
	00 00		 movsxd	 rax, DWORD PTR p$7[rbp]
  0023c	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00240	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  00243	03 c8		 add	 ecx, eax
  00245	8b c1		 mov	 eax, ecx
  00247	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 36   : 					}

  0024a	eb d2		 jmp	 SHORT $LN11@countDays
$LN12@countDays:

; 37   : 					summ += 3 * DaysInMountch[k];

  0024c	48 63 85 b4 00
	00 00		 movsxd	 rax, DWORD PTR k$6[rbp]
  00253	6b 44 85 08 03	 imul	 eax, DWORD PTR DaysInMountch$[rbp+rax*4], 3
  00258	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  0025b	03 c8		 add	 ecx, eax
  0025d	8b c1		 mov	 eax, ecx
  0025f	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 38   : 				}

  00262	eb 95		 jmp	 SHORT $LN8@countDays
$LN9@countDays:
$LN49@countDays:
$LN47@countDays:

; 39   : 			}
; 40   : 		}

  00264	e9 11 01 00 00	 jmp	 $LN45@countDays
$LN44@countDays:

; 41   : 		else if(!defineLeapYear(year))

  00269	8b 8d d0 03 00
	00		 mov	 ecx, DWORD PTR year$[rbp]
  0026f	e8 00 00 00 00	 call	 ?defineLeapYear@@YA_NH@Z ; defineLeapYear
  00274	0f b6 c0	 movzx	 eax, al
  00277	85 c0		 test	 eax, eax
  00279	0f 85 fb 00 00
	00		 jne	 $LN53@countDays

; 42   : 		{
; 43   : 			summ = DaysInMountch[month - 1] - day + 60;

  0027f	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  00285	ff c8		 dec	 eax
  00287	48 98		 cdqe
  00289	8b 8d c0 03 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  0028f	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00293	2b c1		 sub	 eax, ecx
  00295	83 c0 3c	 add	 eax, 60			; 0000003cH
  00298	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 44   : 
; 45   : 			for (int b = month; b != 12; b++) 

  0029b	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  002a1	89 85 f4 00 00
	00		 mov	 DWORD PTR b$8[rbp], eax
  002a7	eb 0e		 jmp	 SHORT $LN16@countDays
$LN14@countDays:
  002a9	8b 85 f4 00 00
	00		 mov	 eax, DWORD PTR b$8[rbp]
  002af	ff c0		 inc	 eax
  002b1	89 85 f4 00 00
	00		 mov	 DWORD PTR b$8[rbp], eax
$LN16@countDays:
  002b7	83 bd f4 00 00
	00 0c		 cmp	 DWORD PTR b$8[rbp], 12
  002be	74 17		 je	 SHORT $LN15@countDays

; 46   : 			{
; 47   : 				summ += DaysInMountch[b];

  002c0	48 63 85 f4 00
	00 00		 movsxd	 rax, DWORD PTR b$8[rbp]
  002c7	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  002cb	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  002ce	03 c8		 add	 ecx, eax
  002d0	8b c1		 mov	 eax, ecx
  002d2	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 48   : 			}

  002d5	eb d2		 jmp	 SHORT $LN14@countDays
$LN15@countDays:

; 49   : 
; 50   : 			if(defineLeapYear(year+3)) { 

  002d7	8b 85 d0 03 00
	00		 mov	 eax, DWORD PTR year$[rbp]
  002dd	83 c0 03	 add	 eax, 3
  002e0	8b c8		 mov	 ecx, eax
  002e2	e8 00 00 00 00	 call	 ?defineLeapYear@@YA_NH@Z ; defineLeapYear
  002e7	0f b6 c0	 movzx	 eax, al
  002ea	85 c0		 test	 eax, eax
  002ec	74 3b		 je	 SHORT $LN54@countDays

; 51   : 				for (int a = 0; a != 12; a++) {

  002ee	c7 85 14 01 00
	00 00 00 00 00	 mov	 DWORD PTR a$9[rbp], 0
  002f8	eb 0e		 jmp	 SHORT $LN19@countDays
$LN17@countDays:
  002fa	8b 85 14 01 00
	00		 mov	 eax, DWORD PTR a$9[rbp]
  00300	ff c0		 inc	 eax
  00302	89 85 14 01 00
	00		 mov	 DWORD PTR a$9[rbp], eax
$LN19@countDays:
  00308	83 bd 14 01 00
	00 0c		 cmp	 DWORD PTR a$9[rbp], 12
  0030f	74 16		 je	 SHORT $LN18@countDays

; 52   : 					summ += 2* DaysInMountch[a];

  00311	48 63 85 14 01
	00 00		 movsxd	 rax, DWORD PTR a$9[rbp]
  00318	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  0031c	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  0031f	8d 04 41	 lea	 eax, DWORD PTR [rcx+rax*2]
  00322	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 53   : 				}

  00325	eb d3		 jmp	 SHORT $LN17@countDays
$LN18@countDays:

; 54   : 			}

  00327	eb 51		 jmp	 SHORT $LN55@countDays
$LN54@countDays:

; 55   : 
; 56   : 			else if (defineLeapYear(year + 2))

  00329	8b 85 d0 03 00
	00		 mov	 eax, DWORD PTR year$[rbp]
  0032f	83 c0 02	 add	 eax, 2
  00332	8b c8		 mov	 ecx, eax
  00334	e8 00 00 00 00	 call	 ?defineLeapYear@@YA_NH@Z ; defineLeapYear
  00339	0f b6 c0	 movzx	 eax, al
  0033c	85 c0		 test	 eax, eax
  0033e	74 3a		 je	 SHORT $LN56@countDays

; 57   : 			{
; 58   : 				for (int a = 0; a != 12; a++) {

  00340	c7 85 34 01 00
	00 00 00 00 00	 mov	 DWORD PTR a$10[rbp], 0
  0034a	eb 0e		 jmp	 SHORT $LN22@countDays
$LN20@countDays:
  0034c	8b 85 34 01 00
	00		 mov	 eax, DWORD PTR a$10[rbp]
  00352	ff c0		 inc	 eax
  00354	89 85 34 01 00
	00		 mov	 DWORD PTR a$10[rbp], eax
$LN22@countDays:
  0035a	83 bd 34 01 00
	00 0c		 cmp	 DWORD PTR a$10[rbp], 12
  00361	74 17		 je	 SHORT $LN21@countDays

; 59   : 					summ += DaysInMountch[a];

  00363	48 63 85 34 01
	00 00		 movsxd	 rax, DWORD PTR a$10[rbp]
  0036a	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  0036e	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  00371	03 c8		 add	 ecx, eax
  00373	8b c1		 mov	 eax, ecx
  00375	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 60   : 				}

  00378	eb d2		 jmp	 SHORT $LN20@countDays
$LN21@countDays:
$LN56@countDays:
$LN55@countDays:
$LN53@countDays:
$LN45@countDays:

; 61   : 			}
; 62   : 		}
; 63   : 	}

  0037a	e9 9b 02 00 00	 jmp	 $LN43@countDays
$LN42@countDays:

; 64   : 
; 65   : 	else if (day >= birthday) {

  0037f	8b 85 b0 03 00
	00		 mov	 eax, DWORD PTR birthday$[rbp]
  00385	39 85 c0 03 00
	00		 cmp	 DWORD PTR day$[rbp], eax
  0038b	0f 8c 2e 01 00
	00		 jl	 $LN57@countDays

; 66   : 	if (month < monthOfBirth)

  00391	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  00397	39 85 c8 03 00
	00		 cmp	 DWORD PTR month$[rbp], eax
  0039d	7d 5f		 jge	 SHORT $LN59@countDays

; 67   : 	{
; 68   : 		summ = DaysInMountch[month - 1] - day;

  0039f	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  003a5	ff c8		 dec	 eax
  003a7	48 98		 cdqe
  003a9	8b 8d c0 03 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  003af	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  003b3	2b c1		 sub	 eax, ecx
  003b5	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 69   : 		for (int o = month; o != monthOfBirth; o++) 

  003b8	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  003be	89 85 54 01 00
	00		 mov	 DWORD PTR o$11[rbp], eax
  003c4	eb 0e		 jmp	 SHORT $LN25@countDays
$LN23@countDays:
  003c6	8b 85 54 01 00
	00		 mov	 eax, DWORD PTR o$11[rbp]
  003cc	ff c0		 inc	 eax
  003ce	89 85 54 01 00
	00		 mov	 DWORD PTR o$11[rbp], eax
$LN25@countDays:
  003d4	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  003da	39 85 54 01 00
	00		 cmp	 DWORD PTR o$11[rbp], eax
  003e0	74 17		 je	 SHORT $LN24@countDays

; 70   : 		{
; 71   : 			summ += DaysInMountch[o];

  003e2	48 63 85 54 01
	00 00		 movsxd	 rax, DWORD PTR o$11[rbp]
  003e9	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  003ed	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  003f0	03 c8		 add	 ecx, eax
  003f2	8b c1		 mov	 eax, ecx
  003f4	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 72   : 		}

  003f7	eb cd		 jmp	 SHORT $LN23@countDays
$LN24@countDays:

; 73   : 	}

  003f9	e9 bc 00 00 00	 jmp	 $LN60@countDays
$LN59@countDays:

; 74   : 	else if (month > monthOfBirth|| month == monthOfBirth) {

  003fe	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  00404	39 85 c8 03 00
	00		 cmp	 DWORD PTR month$[rbp], eax
  0040a	7f 12		 jg	 SHORT $LN62@countDays
  0040c	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  00412	39 85 c8 03 00
	00		 cmp	 DWORD PTR month$[rbp], eax
  00418	0f 85 9c 00 00
	00		 jne	 $LN61@countDays
$LN62@countDays:

; 75   : 		summ= DaysInMountch[month - 1] - day+birthday;

  0041e	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  00424	ff c8		 dec	 eax
  00426	48 98		 cdqe
  00428	8b 8d c0 03 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  0042e	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00432	2b c1		 sub	 eax, ecx
  00434	03 85 b0 03 00
	00		 add	 eax, DWORD PTR birthday$[rbp]
  0043a	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 76   : 		for (int j = month; j != 12; j++) {

  0043d	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  00443	89 85 74 01 00
	00		 mov	 DWORD PTR j$12[rbp], eax
  00449	eb 0e		 jmp	 SHORT $LN28@countDays
$LN26@countDays:
  0044b	8b 85 74 01 00
	00		 mov	 eax, DWORD PTR j$12[rbp]
  00451	ff c0		 inc	 eax
  00453	89 85 74 01 00
	00		 mov	 DWORD PTR j$12[rbp], eax
$LN28@countDays:
  00459	83 bd 74 01 00
	00 0c		 cmp	 DWORD PTR j$12[rbp], 12
  00460	74 58		 je	 SHORT $LN27@countDays

; 77   : 			for (int i = 0; i != monthOfBirth - 1; i++)

  00462	c7 85 94 01 00
	00 00 00 00 00	 mov	 DWORD PTR i$13[rbp], 0
  0046c	eb 0e		 jmp	 SHORT $LN31@countDays
$LN29@countDays:
  0046e	8b 85 94 01 00
	00		 mov	 eax, DWORD PTR i$13[rbp]
  00474	ff c0		 inc	 eax
  00476	89 85 94 01 00
	00		 mov	 DWORD PTR i$13[rbp], eax
$LN31@countDays:
  0047c	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  00482	ff c8		 dec	 eax
  00484	39 85 94 01 00
	00		 cmp	 DWORD PTR i$13[rbp], eax
  0048a	74 17		 je	 SHORT $LN30@countDays

; 78   : 			{
; 79   : 				summ += DaysInMountch[i];

  0048c	48 63 85 94 01
	00 00		 movsxd	 rax, DWORD PTR i$13[rbp]
  00493	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00497	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  0049a	03 c8		 add	 ecx, eax
  0049c	8b c1		 mov	 eax, ecx
  0049e	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 80   : 			}

  004a1	eb cb		 jmp	 SHORT $LN29@countDays
$LN30@countDays:

; 81   : 			summ += DaysInMountch[j];

  004a3	48 63 85 74 01
	00 00		 movsxd	 rax, DWORD PTR j$12[rbp]
  004aa	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  004ae	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  004b1	03 c8		 add	 ecx, eax
  004b3	8b c1		 mov	 eax, ecx
  004b5	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 82   : 		}

  004b8	eb 91		 jmp	 SHORT $LN26@countDays
$LN27@countDays:
$LN61@countDays:
$LN60@countDays:

; 83   : 	}
; 84   : 	}

  004ba	e9 5b 01 00 00	 jmp	 $LN58@countDays
$LN57@countDays:

; 85   : 	
; 86   : 	else if (day < birthday)

  004bf	8b 85 b0 03 00
	00		 mov	 eax, DWORD PTR birthday$[rbp]
  004c5	39 85 c0 03 00
	00		 cmp	 DWORD PTR day$[rbp], eax
  004cb	0f 8d 49 01 00
	00		 jge	 $LN63@countDays

; 87   : 	{
; 88   : 		if (month == monthOfBirth)

  004d1	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  004d7	39 85 c8 03 00
	00		 cmp	 DWORD PTR month$[rbp], eax
  004dd	75 18		 jne	 SHORT $LN64@countDays

; 89   : 			summ = birthday - day;

  004df	8b 85 c0 03 00
	00		 mov	 eax, DWORD PTR day$[rbp]
  004e5	8b 8d b0 03 00
	00		 mov	 ecx, DWORD PTR birthday$[rbp]
  004eb	2b c8		 sub	 ecx, eax
  004ed	8b c1		 mov	 eax, ecx
  004ef	89 45 54	 mov	 DWORD PTR summ$[rbp], eax
  004f2	e9 23 01 00 00	 jmp	 $LN65@countDays
$LN64@countDays:

; 90   : 		else if (month < monthOfBirth) {

  004f7	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  004fd	39 85 c8 03 00
	00		 cmp	 DWORD PTR month$[rbp], eax
  00503	7d 67		 jge	 SHORT $LN66@countDays

; 91   : 			summ = DaysInMountch[month - 1] - day+birthday;

  00505	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  0050b	ff c8		 dec	 eax
  0050d	48 98		 cdqe
  0050f	8b 8d c0 03 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  00515	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00519	2b c1		 sub	 eax, ecx
  0051b	03 85 b0 03 00
	00		 add	 eax, DWORD PTR birthday$[rbp]
  00521	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 92   : 			for (int q = month; q != monthOfBirth - 1; q++) {

  00524	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  0052a	89 85 b4 01 00
	00		 mov	 DWORD PTR q$14[rbp], eax
  00530	eb 0e		 jmp	 SHORT $LN34@countDays
$LN32@countDays:
  00532	8b 85 b4 01 00
	00		 mov	 eax, DWORD PTR q$14[rbp]
  00538	ff c0		 inc	 eax
  0053a	89 85 b4 01 00
	00		 mov	 DWORD PTR q$14[rbp], eax
$LN34@countDays:
  00540	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  00546	ff c8		 dec	 eax
  00548	39 85 b4 01 00
	00		 cmp	 DWORD PTR q$14[rbp], eax
  0054e	74 17		 je	 SHORT $LN33@countDays

; 93   : 				summ += DaysInMountch[q];

  00550	48 63 85 b4 01
	00 00		 movsxd	 rax, DWORD PTR q$14[rbp]
  00557	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  0055b	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  0055e	03 c8		 add	 ecx, eax
  00560	8b c1		 mov	 eax, ecx
  00562	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 94   : 			}

  00565	eb cb		 jmp	 SHORT $LN32@countDays
$LN33@countDays:

; 95   : 		}

  00567	e9 ae 00 00 00	 jmp	 $LN67@countDays
$LN66@countDays:

; 96   : 		else if (month > monthOfBirth) {

  0056c	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  00572	39 85 c8 03 00
	00		 cmp	 DWORD PTR month$[rbp], eax
  00578	0f 8e 9c 00 00
	00		 jle	 $LN68@countDays

; 97   : 			summ = DaysInMountch[month - 1] - day + birthday;

  0057e	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  00584	ff c8		 dec	 eax
  00586	48 98		 cdqe
  00588	8b 8d c0 03 00
	00		 mov	 ecx, DWORD PTR day$[rbp]
  0058e	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  00592	2b c1		 sub	 eax, ecx
  00594	03 85 b0 03 00
	00		 add	 eax, DWORD PTR birthday$[rbp]
  0059a	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 98   : 			for (int j = month; j != 12; j++) {

  0059d	8b 85 c8 03 00
	00		 mov	 eax, DWORD PTR month$[rbp]
  005a3	89 85 d4 01 00
	00		 mov	 DWORD PTR j$15[rbp], eax
  005a9	eb 0e		 jmp	 SHORT $LN37@countDays
$LN35@countDays:
  005ab	8b 85 d4 01 00
	00		 mov	 eax, DWORD PTR j$15[rbp]
  005b1	ff c0		 inc	 eax
  005b3	89 85 d4 01 00
	00		 mov	 DWORD PTR j$15[rbp], eax
$LN37@countDays:
  005b9	83 bd d4 01 00
	00 0c		 cmp	 DWORD PTR j$15[rbp], 12
  005c0	74 58		 je	 SHORT $LN36@countDays

; 99   : 				for (int i = 0; i != monthOfBirth - 1; i++)

  005c2	c7 85 f4 01 00
	00 00 00 00 00	 mov	 DWORD PTR i$16[rbp], 0
  005cc	eb 0e		 jmp	 SHORT $LN40@countDays
$LN38@countDays:
  005ce	8b 85 f4 01 00
	00		 mov	 eax, DWORD PTR i$16[rbp]
  005d4	ff c0		 inc	 eax
  005d6	89 85 f4 01 00
	00		 mov	 DWORD PTR i$16[rbp], eax
$LN40@countDays:
  005dc	8b 85 b8 03 00
	00		 mov	 eax, DWORD PTR monthOfBirth$[rbp]
  005e2	ff c8		 dec	 eax
  005e4	39 85 f4 01 00
	00		 cmp	 DWORD PTR i$16[rbp], eax
  005ea	74 17		 je	 SHORT $LN39@countDays

; 100  : 				{
; 101  : 					summ += DaysInMountch[i];

  005ec	48 63 85 f4 01
	00 00		 movsxd	 rax, DWORD PTR i$16[rbp]
  005f3	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  005f7	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  005fa	03 c8		 add	 ecx, eax
  005fc	8b c1		 mov	 eax, ecx
  005fe	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 102  : 				}

  00601	eb cb		 jmp	 SHORT $LN38@countDays
$LN39@countDays:

; 103  : 				summ += DaysInMountch[j];

  00603	48 63 85 d4 01
	00 00		 movsxd	 rax, DWORD PTR j$15[rbp]
  0060a	8b 44 85 08	 mov	 eax, DWORD PTR DaysInMountch$[rbp+rax*4]
  0060e	8b 4d 54	 mov	 ecx, DWORD PTR summ$[rbp]
  00611	03 c8		 add	 ecx, eax
  00613	8b c1		 mov	 eax, ecx
  00615	89 45 54	 mov	 DWORD PTR summ$[rbp], eax

; 104  : 			}

  00618	eb 91		 jmp	 SHORT $LN35@countDays
$LN36@countDays:
$LN68@countDays:
$LN67@countDays:
$LN65@countDays:
$LN63@countDays:
$LN58@countDays:
$LN43@countDays:

; 105  : 
; 106  : 		}
; 107  : 	}
; 108  : 
; 109  : 	return summ;

  0061a	8b 45 54	 mov	 eax, DWORD PTR summ$[rbp]

; 110  : }

  0061d	8b f8		 mov	 edi, eax
  0061f	48 8d 4d e0	 lea	 rcx, QWORD PTR [rbp-32]
  00623	48 8d 15 00 00
	00 00		 lea	 rdx, OFFSET FLAT:?countDays@@YAHHHHHHH@Z$rtcFrameData
  0062a	e8 00 00 00 00	 call	 _RTC_CheckStackVars
  0062f	8b c7		 mov	 eax, edi
  00631	48 8d a5 98 03
	00 00		 lea	 rsp, QWORD PTR [rbp+920]
  00638	5f		 pop	 rdi
  00639	5d		 pop	 rbp
  0063a	c3		 ret	 0
?countDays@@YAHHHHHHH@Z ENDP				; countDays
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pipec\sem2\kpo\lab3\test\test\countDays.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 54 24 10	 mov	 QWORD PTR [rsp+16], rdx
  00005	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  0000a	55		 push	 rbp
  0000b	57		 push	 rdi
  0000c	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  00013	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00018	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A7E06E07_countDays@cpp
  0001f	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  00024	90		 npad	 1
  00025	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  0002c	5f		 pop	 rdi
  0002d	5d		 pop	 rbp
  0002e	c3		 ret	 0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File D:\pipec\sem2\kpo\lab3\test\test\countDays.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
  00000	48 89 4c 24 08	 mov	 QWORD PTR [rsp+8], rcx
  00005	55		 push	 rbp
  00006	57		 push	 rdi
  00007	48 81 ec e8 00
	00 00		 sub	 rsp, 232		; 000000e8H
  0000e	48 8d 6c 24 20	 lea	 rbp, QWORD PTR [rsp+32]
  00013	48 8d 0d 00 00
	00 00		 lea	 rcx, OFFSET FLAT:__A7E06E07_countDays@cpp
  0001a	e8 00 00 00 00	 call	 __CheckForDebuggerJustMyCode
  0001f	90		 npad	 1
  00020	48 8d a5 c8 00
	00 00		 lea	 rsp, QWORD PTR [rbp+200]
  00027	5f		 pop	 rdi
  00028	5d		 pop	 rbp
  00029	c3		 ret	 0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
